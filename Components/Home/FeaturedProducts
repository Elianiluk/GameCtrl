import React, { useState } from "react";
import { Link } from "react-router-dom";
import { createPageUrl } from "@/utils";
import { Button } from "@/components/ui/button";
import { Badge } from "@/components/ui/badge";
import { Star, ShoppingCart, ArrowRight } from "lucide-react";
import { motion } from "framer-motion";
import { Skeleton } from "@/components/ui/skeleton";
import { CartItem } from "@/entities/CartItem";

export default function FeaturedProducts({ products, isLoading }) {
  const [addingStates, setAddingStates] = useState({});

  const formatPrice = (price, originalPrice) => {
    const discount = originalPrice ? Math.round(((originalPrice - price) / originalPrice) * 100) : 0;
    return { discount, hasDiscount: discount > 0 };
  };

  const addToCart = async (product) => {
    try {
      setAddingStates(prev => ({ ...prev, [product.id]: 'adding' }));
      
      const userSession = localStorage.getItem('cart_session') || 'session-' + Date.now();
      localStorage.setItem('cart_session', userSession);
      
      await CartItem.create({
        product_id: product.id,
        quantity: 1,
        user_session: userSession
      });
      
      setAddingStates(prev => ({ ...prev, [product.id]: 'added' }));
      setTimeout(() => {
        setAddingStates(prev => ({ ...prev, [product.id]: null }));
      }, 2000);
      
    } catch (error) {
      console.error("Error adding to cart:", error);
      setAddingStates(prev => ({ ...prev, [product.id]: null }));
    }
  };

  if (isLoading) {
    return (
      <section>
        <div className="text-center mb-16">
          <Skeleton className="h-12 w-64 mx-auto mb-6" />
          <Skeleton className="h-6 w-96 mx-auto" />
        </div>
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
          {Array(6).fill(0).map((_, i) => (
            <div key={i} className="glass-effect rounded-2xl p-6">
              <Skeleton className="h-48 w-full mb-6 rounded-xl" />
              <Skeleton className="h-6 w-3/4 mb-4" />
              <Skeleton className="h-4 w-full mb-2" />
              <Skeleton className="h-4 w-2/3 mb-6" />
              <Skeleton className="h-10 w-full" />
            </div>
          ))}
        </div>
      </section>
    );
  }

  return (
    <section>
      <motion.div
        initial={{ opacity: 0, y: 30 }}
        whileInView={{ opacity: 1, y: 0 }}
        transition={{ duration: 0.8 }}
        className="text-center mb-16"
      >
        <h2 className="text-4xl md:text-5xl font-bold text-white mb-6">
          Featured Controllers
        </h2>
        <p className="text-xl text-slate-400 max-w-2xl mx-auto">
          Hand-picked premium controllers for the ultimate gaming experience
        </p>
      </motion.div>

      <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8 mb-12">
        {products.map((product, index) => {
          const { discount, hasDiscount } = formatPrice(product.price, product.original_price);
          const buttonState = addingStates[product.id];
          
          return (
            <motion.div
              key={product.id}
              initial={{ opacity: 0, y: 50 }}
              whileInView={{ opacity: 1, y: 0 }}
              transition={{ duration: 0.6, delay: index * 0.1 }}
              className="glass-effect rounded-2xl p-6 hover:scale-105 transition-all duration-300 group"
            >
              <div className="relative mb-6">
                <img
                  src={product.image_url || `https://images.unsplash.com/photo-1606144042614-b2417e99c4e3?w=400&h=300&fit=crop`}
                  alt={product.name}
                  className="w-full h-48 object-cover rounded-xl"
                />
                {hasDiscount && (
                  <Badge className="absolute top-3 left-3 bg-red-500 text-white">
                    -{discount}%
                  </Badge>
                )}
                {product.rating && (
                  <div className="absolute top-3 right-3 flex items-center gap-1 bg-black/50 rounded-lg px-2 py-1">
                    <Star className="w-4 h-4 text-yellow-400 fill-current" />
                    <span className="text-white text-sm">{product.rating}</span>
                  </div>
                )}
              </div>

              <div className="space-y-4">
                <div>
                  <Badge variant="outline" className="border-blue-500 text-blue-400 mb-2">
                    {product.brand}
                  </Badge>
                  <h3 className="text-xl font-bold text-white group-hover:text-blue-400 transition-colors">
                    {product.name}
                  </h3>
                  <p className="text-slate-400 text-sm leading-relaxed mt-2">
                    {product.description?.substring(0, 100)}...
                  </p>
                </div>

                <div className="flex items-center gap-2">
                  <span className="text-2xl font-bold text-white">${product.price}</span>
                  {hasDiscount && (
                    <span className="text-lg text-slate-400 line-through">${product.original_price}</span>
                  )}
                </div>

                <Button 
                  onClick={() => addToCart(product)}
                  disabled={buttonState === 'adding' || buttonState === 'added'}
                  className="w-full bg-gradient-to-r from-blue-500 to-purple-600 hover:from-blue-600 hover:to-purple-700 text-white glow-effect"
                >
                  {buttonState === 'adding' ? (
                    <>
                      <div className="w-4 h-4 mr-2 animate-spin rounded-full border-2 border-white/30 border-t-white" />
                      Adding...
                    </>
                  ) : buttonState === 'added' ? (
                    <>
                      âœ“ Added!
                    </>
                  ) : (
                    <>
                      <ShoppingCart className="w-4 h-4 mr-2" />
                      Add to Cart
                    </>
                  )}
                </Button>
              </div>
            </motion.div>
          );
        })}
      </div>

      <div className="text-center">
        <Link to={createPageUrl("Products")}>
          <Button variant="outline" size="lg" className="border-slate-600 text-slate-300 hover:bg-slate-800 px-8 py-4 text-lg glass-effect">
            View All Controllers
            <ArrowRight className="w-5 h-5 ml-2" />
          </Button>
        </Link>
      </div>
    </section>
  );
}
